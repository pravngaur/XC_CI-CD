<apex:page id="cc_poc_pmt_CC_Edit" controller="cc_poc_ctrl_pmt_CC_Edit" applyHtmlTag="false"
    docType="html-5.0" sidebar="false" showHeader="false" standardStylesheets="false">

<script id="MyAccount-MyWalletMCC-Both" type="text/template">
    <div class="myWalletCCOuterContainer">
        <h2 class="title">{{pageLabelMap 'MyWallet_AddPymtMtd'}}</h2>
        <div class="main_content_large_right_container">

            <div class="alert alert-error error_messages_section" style="display:none;"></div>

            <form id="newCCForm" action="" class="newCCForm" forceSSL="true">
                <fieldset>
                    <legend>New Credit Card</legend>
                    <p>Enter your payment data below</p>
                    <p>Name:</p><p><input type="text" name="displayName" id="displayName" value="{{this.displayName}}" maxlength="50" /></p>
                    <p>Card Type: {{pageLabelMapMultiString 'PaymentType_' this.paymentType}}</p>
                    <p>Card Number: {{pageLabelMap this.accountNumber}}</p>
                    <p>Expiration:</p><p>M:<select name="expirationMonth">
                        {{#select this.expMonth}}
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                        <option value="10">10</option>
                        <option value="11">11</option>
                        <option value="12">12</option>
                        {{/select}}
                    </select>
                    &nbsp;Y:<select name="expirationYear">
                        {{#select this.expYear}}
                        <option value="2017">2017</option>
                        <option value="2018">2018</option>
                        <option value="2019">2019</option>
                        <option value="2020">2020</option>
                        <option value="2020">2021</option>
                        {{/select}}
                    </select></p>
                    <p>Enabled for Checkout:</p><p><input type="checkbox" name="isEnabled" id="isEnabled" {{#if this.isEnabled}}checked{{/if}} /></p>
                </fieldset>
                <p class="two_buttons">
                    <div class="right">
                        <input type="button" class='button cancelCC' id="cancelCC" value="{{pageLabelMap 'MyWallet_Cancel'}}" />
                        <input type="button" class='button saveCC' id="saveCC" value="{{pageLabelMap 'MyWallet_SaveToWall'}}" />
                    </div>
                </p>
                <p>&nbsp;</p>
            </form>
        </div>
    </div>
</script>

<script>
    var pmt = {
        storedPaymentId: "{!JSENCODE(storedPaymentId)}",
        displayName: "{!JSENCODE(displayName)}",
        accountNumber: "{!JSENCODE(accountNumber)}",
        isEnabled: {!isEnabled},
        paymentType: "{!JSENCODE(paymentType)}",
        expMonth: {!expMonth},
        expYear: {!expYear}
    };

    jQuery(function($) {
        Handlebars.registerHelper("select", function(value, options) {
            return options.fn(this)
                .split('\n')
                .map(function(v) {
                    var t = 'value="' + value + '"'
                    return ! RegExp(t).test(v) ? v : v.replace(t, t + ' selected="selected"')
                })
                .join('\n');
        });

        CCRZ.models.StoredPaymentsCCModel = CCRZ.CloudCrazeModel.extend({
            className : "cc_poc_ctrl_pmt_CC_Edit",
            saveCC: function(poData, callback) {
                this.invokeContainerLoadingCtx($('body'), "updateCCNumber", JSON.stringify(poData),
                    function(response){
                        if(response && response.success ) {
                            callback();
                        }
                    },
                    {nmsp: false}
                );
            },
        });

        CCRZ.views.StoredPaymentsCCView = CCRZ.CloudCrazeView.extend({
            viewName : "StoredPaymentsCCView",
            templateDesktop : CCRZ.util.template("MyAccount-MyWalletMCC-Both"),
            templatePhone : CCRZ.util.template("MyAccount-MyWalletMCC-Both"),
            init : function(){
                this.render();
            },
            events: {
                "click #saveCC" : "saveNewCCNumber",
                "click #cancelCC" : "cancelNewCCNumber"
            },
            preRender : function() {
                this.data={
                    'storedPaymentId' : pmt.storedPaymentId,
                    'displayName' : pmt.displayName,
                    'accountNumber' : pmt.accountNumber,
                    'isEnabled' : pmt.isEnabled,
                    'paymentType' : pmt.paymentType,
                    'expMonth' : pmt.expMonth,
                    'expYear' : pmt.expYear
                };
            },
            renderDesktop : function(){
                $(CCRZ.uiProperties.StoredPaymentsPOView.phone.selector).empty();
                this.setElement($(CCRZ.uiProperties.StoredPaymentsPOView.desktop.selector));
                this.$el.html(this.templateDesktop(this.data));
            },
            renderPhone : function(){
                $(CCRZ.uiProperties.StoredPaymentsPOView.desktop.selector).empty();
                this.setElement($(CCRZ.uiProperties.StoredPaymentsPOView.phone.selector));
                this.$el.html(this.templatePhone(this.data));
            },
            cancelNewCCNumber : function(){
                myWallet();
            },
            saveNewCCNumber : function() {
                var formData = form2js("newCCForm", '.', false, function(node) {}, false);
                formData.storedPaymentId = this.data.storedPaymentId;
                formData.isEnabled = formData.isEnabled != null ? true : false;
                this.model.saveCC(formData, function() {
                    myWallet();
                });
            }
        });

        CCRZ.paymentViews = CCRZ.paymentViews || {};
        CCRZ.paymentViews.cc = new CCRZ.views.StoredPaymentsCCView({
            model : new CCRZ.models.StoredPaymentsCCModel
        });
    });
</script>
</apex:page>